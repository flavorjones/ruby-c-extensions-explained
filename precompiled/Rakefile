# frozen_string_literal: true

require "bundler/gem_tasks"
require "rake/testtask"

rcee_precompiled_spec = Bundler.load_gemspec("rcee_precompiled.gemspec")

Rake::TestTask.new(:test) do |t|
  t.libs << "test"
  t.libs << "lib"
  t.test_files = FileList["test/**/*_test.rb"]
end

# "gem" task for vanilla packaged (tarball)
require "rubygems/package_task"
Gem::PackageTask.new(rcee_precompiled_spec).define


require "rake/extensiontask"
require "rake_compiler_dock"

cross_rubies = ["3.0.0", "2.7.0", "2.6.0", "2.5.0"]
cross_platforms = ["x64-mingw32", "x86_64-linux", "x86_64-darwin", "arm64-darwin"]

ENV["RUBY_CC_VERSION"] = cross_rubies.join(":")

Rake::ExtensionTask.new("precompiled", rcee_precompiled_spec) do |ext|
  ext.lib_dir = "lib/rcee/precompiled"
  ext.cross_compile = true
  ext.cross_platform = cross_platforms
  ext.cross_config_options << "--enable-cross-build" # so extconf.rb knows we're cross-compiling
  ext.cross_compiling do |spec|
    # remove things not needed for precompiled gems
    spec.dependencies.reject! { |dep| dep.name == 'mini_portile2' }
    spec.files.reject! { |file| File.fnmatch?("*.tar.gz", file) }
  end
end

namespace "gem" do
  cross_platforms.each do |platform|
    desc "build native gem for #{platform}"
    task platform do
      RakeCompilerDock.sh(<<~EOF, platform: platform)
        gem install bundler --no-document &&
        bundle &&
        bundle exec rake gem:#{platform}:buildit
      EOF
    end

    namespace platform do
      # this runs in the rake-compiler-dock docker container
      task "buildit" do
        # use Task#invoke because the pkg/*gem task is defined at runtime
        Rake::Task["native:#{platform}"].invoke
        Rake::Task["pkg/#{rcee_precompiled_spec.full_name}-#{Gem::Platform.new(platform).to_s}.gem"].invoke
      end
    end
  end

  desc "build native gem for all platforms"
  multitask "all" => [cross_platforms, "gem"].flatten
end


CLOBBER.add("ports")
CLEAN.add("{ext,lib}/**/*.{o,so}")

task build: :compile
task default: %i[clobber compile test]
